
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-us" lang="en-us">
<head><meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="DC.Type" content="topic" />
<meta name="DC.Title" content="Appendix B: JAAS Login Configuration File" />
<meta name="DC.Format" content="XHTML" />
<meta name="DC.Identifier" content="GUID-7EB80FA5-3C16-4016-AED6-0FC619F86F8E" />
<meta name="DC.Language" content="en-US" />

<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Script-Type" content="text/javascript" />
<title>Appendix B: JAAS Login Configuration File</title>

<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)" />
<meta name="plugin" content="Infodev XHTML plugin release 17.2.1" />
<meta name="brand" content="DARB" />
<meta name="doctitle" content="Appendix B: JAAS Login Configuration File&#xA;" />
<meta name="date" content="2018-04-19T11:46:47Z" />
<meta name="robots" content="noarchive" />
<meta name="relnum" content="Release 11" />
<meta name="partnum" content="E94828-01" />
<meta name="docid" content="JSSEC" />
<link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />
<link rel="stylesheet" href="../../dcommon/css/blafdoc.css" title="Oracle BLAFDoc" type="text/css" />
<script type="application/javascript" src="../../dcommon/js/ohc-videos.js"></script>

<link rel="contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="prev" href="java-authentication-and-authorization-service-jaas-reference-guide.htm" title="Previous" type="text/html" />
<link rel="next" href="jaas-tutorials.htm" title="Next" type="text/html" />
</head>
<body>
<div class="header"><a id="top" name="top"></a>
<div class="zz-skip-header"><a href="#BEGIN">Go to primary content</a></div>
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<tr>
<td valign="top"><b>Java Platform, Standard Edition Security Developer&#8217;s Guide</b><br />
<b>
<span>Release 11</span> 
</b><br />
E94828-01
</td>
<td valign="bottom" align="right">
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="225">
<tr>
<td> </td>
<td align="center" valign="top">
<a href="toc.htm"><img src="../../dcommon/gifs/toc.gif" alt="Go To Table Of Contents" /><br />
<span class="icon">Contents</span></a>
</td>
</tr>
</table>
</td>
</tr>
</table>
<hr />
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100">
<tr>
<td align="center">
<a href="java-authentication-and-authorization-service-jaas-reference-guide.htm">
<img src="../../dcommon/gifs/leftnav.gif" alt="Previous" /><br />
<span class="icon">Previous</span>
</a>
</td>
<td align="center">
<a href="jaas-tutorials.htm">
<img src="../../dcommon/gifs/rightnav.gif" alt="Next" /><br />
<span class="icon">Next</span>
</a>
</td>
<td> </td>
</tr>
</table>
<a name="BEGIN" id="BEGIN"></a></div><!-- class="header" -->
<div class="ind"><a id="GUID-7EB80FA5-3C16-4016-AED6-0FC619F86F8E" name="GUID-7EB80FA5-3C16-4016-AED6-0FC619F86F8E"></a><!-- End Header -->
<h1 id="JSSEC-GUID-7EB80FA5-3C16-4016-AED6-0FC619F86F8E" class="sect1">Appendix B: JAAS Login Configuration File</h1>
<div><p>JAAS authentication is performed in a pluggable fashion, so Java applications can remain independent from underlying authentication technologies. Configuration information such as the desired authentication technology is specified at runtime. The source of the configuration information (for example, a file or a database) is up to the current <a href="https://docs.oracle.com/javase/10/docs/api/javax/security/auth/login/Configuration.html" target="_blank"><span class="apiname">javax.security.auth.login.Configuration</span></a> implementation. The default <code class="codeph">Configuration</code> implementation, <code class="codeph">ConfigFile</code>, gets its configuration information from login configuration files. For details about the default login <code class="codeph">Configuration</code> implementation provided with JAAS, see the <a href="https://docs.oracle.com/javase/10/docs/api/com/sun/security/auth/login/ConfigFile.html" target="_blank"><code class="codeph">com.sun.security.auth.login.ConfigFile</code></a> class.</p>
</div>
<div class="sect2"><a id="GUID-9713B697-EFED-49A1-9E15-8039AD04458B" name="GUID-9713B697-EFED-49A1-9E15-8039AD04458B"></a><h2 id="JSSEC-GUID-9713B697-EFED-49A1-9E15-8039AD04458B" class="sect2">Login Configuration File Structure and Contents</h2>
<div><p>A login configuration file consists of one or more entries, each specifying which underlying authentication technology should be used for a particular application or applications. The structure of each entry is the following:</p>
<pre class="oac_no_warn" dir="ltr"><span class="variable">&lt;name used by application to refer to this entry&gt;</span> { 
    <span class="variable">&lt;LoginModule&gt;</span> <span class="variable">&lt;flag&gt;</span> <span class="variable">&lt;LoginModule options&gt;</span>;
    <span class="variable">&lt;optional additional LoginModules, flags and options&gt;</span>;
};
</pre>
<p>Thus, each login configuration file entry consists of a name followed by one or more <span class="apiname">LoginModule</span>-specific entries, where each <span class="apiname">LoginModule</span>-specific entry is terminated by a semicolon and the entire group of <span class="apiname">LoginModule</span>-specific entries is enclosed in braces. Each configuration file entry is terminated by a semicolon.</p>
<div class="example" id="GUID-9713B697-EFED-49A1-9E15-8039AD04458B__GUID-8B49A958-1B17-4713-AB56-42F99D6B8247"><p class="titleinexample">Example 6-1 Login Configuration File for JAAS Authentication Tutorial</p><p>As an example, the login configuration file used for the <a href="jaas-authentication-tutorial.htm#GUID-BFEBDB00-9826-499C-A20F-E9463883DED4">JAAS Authentication Tutorial</a> tutorial contains just one entry, which is</p>
<pre class="oac_no_warn" dir="ltr"><span class="bold">Sample {
   sample.module.SampleLoginModule required debug=true;
};</span>
</pre>
<p>Here, the entry is named <code class="codeph">Sample</code> and that is the name that the JAAS Authentication tutorial application (<code class="codeph">SampleAcn.java</code>) uses to refer to this entry. The entry specifies that the <span class="apiname">LoginModule</span> to be used to do the user authentication is the <code class="codeph">SampleLoginModule</code> in the <code class="codeph">sample.module</code> package and that this <code class="codeph">SampleLoginModule</code> is required to "succeed" in order for authentication to be considered successful. The <code class="codeph">SampleLoginModule</code> succeeds only if the name and password supplied by the user are the ones it expects (<code class="codeph">testUser</code> and <code class="codeph">testPassword</code>, respectively).</p>
<p>The <span class="bold">name</span> for an entry in a login configuration file is the name that applications use to refer to the entry when they instantiate a <span class="apiname">LoginContext</span>, as described in <a href="jaas-authentication-tutorial.htm#GUID-BFEBDB00-9826-499C-A20F-E9463883DED4">JAAS Authentication Tutorial</a> in the JAAS authentication tutorial. The name can be whatever name the application developer wishes to use. Here, the term "application" refers to whatever code does the JAAS login.</p>
<p>The specified <span class="apiname">LoginModules</span> (described below) are used to control the authentication process. Authentication proceeds down the list in the exact order specified, as described in the <a href="https://docs.oracle.com/javase/10/docs/api/javax/security/auth/login/Configuration.html" target="_blank"><span class="apiname">Configuration</span></a> class.</p>
<p>The subparts of each <span class="apiname">LoginModule</span>-specific entry are the following:</p>
<ul style="list-style-type: disc;"><li><p><span class="bold">LoginModule</span>: This specifies a class implementing the desired authentication technology. Specifically, the class must be a subclass of the <span class="apiname">LoginModule</span> class, which is in the <code class="codeph">javax.security.auth.spi</code> package. A typical <span class="apiname">LoginModule</span> may prompt for and verify a user name and password, as is done by the <code class="codeph">SampleLoginModule</code> (in the <code class="codeph">sample.module</code> package) used for these tutorials. Any vendor can provide a LoginModule implementation that you can use. Some implementations are supplied with the JRE from Oracle. You can view the reference documentation for the various <span class="apiname">LoginModule</span>s, all in the <code class="codeph">com.sun.security.auth</code> package:</p>
<ul style="list-style-type: disc;"><li><a href="https://docs.oracle.com/javase/10/docs/api/com/sun/security/auth/module/JndiLoginModule.html" target="_blank"><span class="apiname">JndiLoginModule</span></a></li>
<li><a href="https://docs.oracle.com/javase/10/docs/api/com/sun/security/auth/module/KeyStoreLoginModule.html" target="_blank"><span class="apiname">KeyStoreLoginModule</span></a></li>
<li><a href="https://docs.oracle.com/javase/10/docs/api/com/sun/security/auth/module/Krb5LoginModule.html" target="_blank"><span class="apiname">Krb5LoginModule</span></a></li>
<li><a href="https://docs.oracle.com/javase/10/docs/api/com/sun/security/auth/module/NTLoginModule.html" target="_blank"><span class="apiname">NTLoginModule</span></a></li>
<li><a href="https://docs.oracle.com/javase/10/docs/api/com/sun/security/auth/module/UnixLoginModule.html" target="_blank"><span class="apiname">UnixLoginModule</span></a></li>
</ul>
</li>
<li><p><span class="bold">flag</span>: The flag value indicates whether success of the preceding <span class="apiname">LoginModule</span> is <code class="codeph">required</code>, <code class="codeph">requisite</code>, <code class="codeph">sufficient</code>, or <code class="codeph">optional</code>. If there is just one <span class="apiname">LoginModule</span>-specific entry, as there is in our tutorials, then the flag for it should be "required". The options are described in more detail in the <a href="https://docs.oracle.com/javase/10/docs/api/javax/security/auth/login/Configuration.html" target="_blank"><span class="apiname">Configuration</span></a> class.</p>
</li>
<li><p><span class="bold">LoginModule options</span>: If the specified <span class="apiname">LoginModule</span> implementation has options that can be set, you specify any desired option values here. This is a space-separated list of values which are passed directly to the underlying <span class="apiname">LoginModule</span>. Options are defined by the <span class="apiname">LoginModule</span> itself, and control the behavior within it. For example, a <span class="apiname">LoginModule</span> may define options to support debugging/testing capabilities.</p>
<p>The correct way to specify options in the configuration file is by using a name-value pairing, for example <code class="codeph">debug=true</code>, where the option name (in this case, <code class="codeph">debug</code>) and value (in this case, <code class="codeph">true</code>) should be separated by an equals symbol.</p>
</li>
</ul>
</div>
<!-- class="example" -->
<div class="example" id="GUID-9713B697-EFED-49A1-9E15-8039AD04458B__GUID-B4E5B990-335D-4505-984C-23EA6B12E626"><p class="titleinexample">Example 6-2 Login Configuration File Demonstrating required, sufficient, requisite, and optional Flags</p><p>The following is a sample login configuration file that demonstrates the <code class="codeph">required</code>, <code class="codeph">sufficient</code>, <code class="codeph">requisite</code>, and <code class="codeph">optional</code> flags. See the <a href="https://docs.oracle.com/javase/10/docs/api/javax/security/auth/login/Configuration.html" target="_blank"><code class="codeph">Configuration</code></a> class for more information about these flags.</p>
<pre class="oac_no_warn" dir="ltr">Login1 {
       sample.SampleLoginModule required debug=true;
    };

    Login2 {
       sample.SampleLoginModule required;
       com.sun.security.auth.module.NTLoginModule sufficient;
       com.foo.SmartCard requisite debug=true;
       com.foo.Kerberos optional debug=true;
    };</pre>
<p>The application <span class="bold">Login1</span> only has one configured <code class="codeph">LoginModule</code>, <code class="codeph">SampleLoginModule</code>. Therefore, an attempt by <span class="bold">Login1</span> to authenticate a subject (user or service) will be successful if and only if the <code class="codeph">SampleLoginModule</code> succeeds.</p>
<p>The authentication logic for the application <span class="bold">Login2</span> is easier to explain with the following table:</p>
<div class="tblformalwide" id="GUID-9713B697-EFED-49A1-9E15-8039AD04458B__GUID-08C8B04B-2735-4218-AA3B-DDE4F7514A5F">
<p class="titleintable">Table 6-1 Login2 Authentication Status</p>
<table cellpadding="4" cellspacing="0" class="FormalWide" title="Login2 Authentication Status" summary="Authentication logic for the application Login2" width="100%" frame="hsides" border="1" rules="rows"><thead><tr align="left" valign="top"><th align="left" valign="bottom" width="20%" id="d84141e307">Module Class</th>
<th align="left" valign="bottom" width="20%" id="d84141e310">Flag</th>
<th align="left" valign="bottom" width="20%" id="d84141e313">Authentication Attempt 1</th>
<th align="left" valign="bottom" width="20%" id="d84141e316">Authentication Attempt 2</th>
<th align="left" valign="bottom" width="20%" id="d84141e319">Authentication Attempt 3</th>
<th align="left" valign="bottom" width="20%" id="d84141e322">Authentication Attempt 4</th>
<th align="left" valign="bottom" width="20%" id="d84141e325">Authentication Attempt 5</th>
<th align="left" valign="bottom" width="20%" id="d84141e328">Authentication Attempt 6</th>
<th align="left" valign="bottom" width="20%" id="d84141e331">Authentication Attempt 7</th>
<th align="left" valign="bottom" width="20%" id="d84141e334">Authentication Attempt 8</th>
</tr>
</thead>
<tbody><tr align="left" valign="top"><td rowspan="1" colspan="1" align="left" valign="top" id="d84141e340" headers="d84141e307 "><p><code class="codeph">SampleLoginModule</code></p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e340 d84141e310 "><p>required</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e340 d84141e313 "><p>pass</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e340 d84141e316 "><p>pass</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e340 d84141e319 "><p>pass</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e340 d84141e322 "><p>pass</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e340 d84141e325 "><p>fail</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e340 d84141e328 "><p>fail</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e340 d84141e331 "><p>fail</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e340 d84141e334 "><p>fail</p>
</td>
</tr>
<tr align="left" valign="top"><td rowspan="1" colspan="1" align="left" valign="top" id="d84141e372" headers="d84141e307 "><p><code class="codeph">NTLoginModule</code></p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e372 d84141e310 "><p>sufficient</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e372 d84141e313 "><p>pass</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e372 d84141e316 "><p>fail</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e372 d84141e319 "><p>fail</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e372 d84141e322 "><p>fail</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e372 d84141e325 "><p>pass</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e372 d84141e328 "><p>fail</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e372 d84141e331 "><p>fail</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e372 d84141e334 "><p>fail</p>
</td>
</tr>
<tr align="left" valign="top"><td rowspan="1" colspan="1" align="left" valign="top" id="d84141e404" headers="d84141e307 "><p>SmartCard</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e404 d84141e310 "><p>requisite</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e404 d84141e313 "><p>*</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e404 d84141e316 "><p>pass</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e404 d84141e319 "><p>pass</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e404 d84141e322 "><p>fail</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e404 d84141e325 "><p>*</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e404 d84141e328 "><p>pass</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e404 d84141e331 "><p>pass</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e404 d84141e334 "><p>fail</p>
</td>
</tr>
<tr align="left" valign="top"><td rowspan="1" colspan="1" align="left" valign="top" id="d84141e435" headers="d84141e307 "><p>Kerberos</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e435 d84141e310 "><p>optional</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e435 d84141e313 "><p>*</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e435 d84141e316 "><p>pass</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e435 d84141e319 "><p>fail</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e435 d84141e322 "><p>*</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e435 d84141e325 "><p>*</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e435 d84141e328 "><p>pass</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e435 d84141e331 "><p>fail</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e435 d84141e334 "><p>*</p>
</td>
</tr>
<tr align="left" valign="top"><td rowspan="1" colspan="1" align="left" valign="top" id="d84141e466" headers="d84141e307 "><p>Overall Authentication</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e466 d84141e310 "><p>not applicable</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e466 d84141e313 "><p>pass</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e466 d84141e316 "><p>pass</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e466 d84141e319 "><p>pass</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e466 d84141e322 "><p>fail</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e466 d84141e325 "><p>fail</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e466 d84141e328 "><p>fail</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e466 d84141e331 "><p>fail</p>
</td>
<td rowspan="1" colspan="1" align="left" valign="top" headers="d84141e466 d84141e334 "><p>fail</p>
</td>
</tr>
</tbody>
</table>

</div>
<!-- class="inftblhruleinformal" -->
<p>* = trivial value due to control returning to the application because a previous <span class="italic">requisite</span> module failed or a previous <span class="italic">sufficient</span> module succeeded.</p>
</div>
<!-- class="example" -->
</div>
</div>
<div class="sect2"><a id="GUID-1D5D78E1-4771-43B7-AEED-1D427A7044F0" name="GUID-1D5D78E1-4771-43B7-AEED-1D427A7044F0"></a><h2 id="JSSEC-GUID-1D5D78E1-4771-43B7-AEED-1D427A7044F0" class="sect2">Where to Specify Which Login Configuration File Should Be Used</h2>
<div><p>The configuration file to be used can be specified in one of two ways:</p>
<ol><li><p>On the command line.</p>
<p>You can use a <code class="codeph">-Djava.security.auth.login.config</code> interpreter command line argument to specify the login configuration file that should be used. We use this approach for all the tutorials. For example, we run our <code class="codeph">SampleAcn</code> application in the <a href="jaas-authentication-tutorial.htm#GUID-BFEBDB00-9826-499C-A20F-E9463883DED4">JAAS Authentication Tutorial</a> using the following command, which specifies that the configuration file is the <code class="codeph">sample_jaas.config</code> file in the current directory:</p>
<pre class="oac_no_warn" dir="ltr">java -Djava.security.auth.login.config==sample_jaas.config sample.SampleAcn
</pre>
<div class="infoboxnote" id="GUID-1D5D78E1-4771-43B7-AEED-1D427A7044F0__GUID-2DD19A7E-59D7-40A6-AC26-ACD6E8AD9583"><p class="notep1">Note:</p><p>If you use a single equals sign (<code class="codeph">=</code>) with the <code class="codeph">java.security.auth.login.config</code> system property, then the configurations specified by both this system property and the <code>java.security</code> file are used.</p>
</div>
</li>
<li><p>In the Java Security Properties file.</p>
<p>An alternate approach to specifying the location of the login configuration file is to indicate its URL as the value of a <code class="codeph">login.config.url.<span class="variable">n</span></code> property in the security properties file. The Security Properties file is the <code class="codeph">java.security</code> file located in the <code class="codeph">conf/security</code> directory of the JDK.</p>
<p>Here, <code class="codeph"><span class="variable">n</span></code> indicates a consecutively-numbered integer starting with 1. Thus, if desired, you can specify more than one login configuration file by indicating one file's URL for the <code class="codeph">login.config.url.1</code> property, a second file's URL for the <code class="codeph">login.config.url.2</code> property, and so on. If more than one login configuration file is specified (that is, if <code class="codeph"><span class="variable">n</span></code> &gt; 1), then the files are read and concatenated into a single configuration.</p>
<p>Here is an example of what would need to be added to the security properties file in order to indicate the <code class="codeph">sample_jaas.config</code> login configuration file used by this tutorial. This example assumes the file is in the <code class="codeph">C:\AcnTest</code> directory on Windows:</p>
<pre class="oac_no_warn" dir="ltr">login.config.url.1=file:C:/AcnTest/sample_jaas.config
</pre>
<p>(Note that URLs always use forward slashes, regardless of what operating system the user is running.)</p>
</li>
</ol>
</div>
</div>
</div><!-- class="ind" --><!-- Start Footer -->
<div class="footer">
<hr />
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<col width="33%" />
<col width="*" />
<col width="33%" />
<tr>
<td valign="bottom">
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100">
<tr>
<td align="center">
<a href="java-authentication-and-authorization-service-jaas-reference-guide.htm">
<img src="../../dcommon/gifs/leftnav.gif" alt="Previous" /><br />
<span class="icon">Previous</span>
</a>
</td>
<td align="center">
<a href="jaas-tutorials.htm">
<img src="../../dcommon/gifs/rightnav.gif" alt="Next" /><br />
<span class="icon">Next</span>
</a>
</td>
<td> </td>
</tr>
</table>
</td>
<td class="copyrightlogo">
<img class="copyrightlogo" src="../../dcommon/gifs/oracle.gif" alt="Oracle Logo" />
<a href="../../dcommon/html/cpyr.htm"><br />
<span class="copyrightlogo">Copyright&nbsp;&copy;&nbsp;1993, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.</span></a>
</td>
<td valign="bottom" align="right">
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="225">
<tr>
<td>
 
</td>
<td align="center" valign="top">
<a href="toc.htm"><img src="../../dcommon/gifs/toc.gif" alt="Go To Table Of Contents" /><br />
<span class="icon">Contents</span></a>
</td>
</tr>
</table>
</td>
</tr>
</table>

</div>
<!-- class="footer" -->
</body>
</html>
